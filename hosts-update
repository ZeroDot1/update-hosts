#!/usr/bin/env bash
# Author:
#  Héctor Molinero Fernández <me@znt.se>.
#
# Modified by:
#  pyamsoft <pyam(dot)soft(at)gmail(dot)com>

# Exit on errors:
# For more information about these particular options, see
#    https://stackoverflow.com/questions/13468481/when-to-use-set-e
set -eu
set -o pipefail

# Configuration:
DST_HOSTS="/etc/hosts"
DST_IP="0.0.0.0"
# NOTE: Adding the alias of the 0 domain to itself fixes a display issue that
#       can occur when using traceroute, netstat and the like.
HEADER="
127.0.0.1 $(uname -n) localhost
255.255.255.255 broadcasthost
0.0.0.0 0.0.0.0
"
SOURCES=(
	"http://winhelp2002.mvps.org/hosts.txt"
	"http://someonewhocares.org/hosts/hosts"
	"http://hosts-file.net/ad_servers.txt"
	"http://www.malwaredomainlist.com/hostslist/hosts.txt"
	"http://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&mimetype=plaintext"
	"http://adaway.org/hosts.txt"
)

JUSTDOMAIN_SOURCES=(
	"http://malwaredomains.lehigh.edu/files/justdomains"
)

WHITELIST=(
	"example.com"
	"example.org"
)
# BLACKLIST DOMAINS
#    agor.io: Jumpscare
#    pinion.gg: Ads in Counter Strike: Global Offensive and other games
BLACKLIST=(
	"agor.io"
	"www.agor.io"
	"adback.pinion.gg"
	"api.pinion.gg"
	"bin.pinion.gg"
	"blog.pinion.gg"
	"bork.pinion.gg"
	"calendar.pinion.gg"
	"cdn.pinion.gg"
	"cp.pinion.gg"
	"crm.pinion.gg"
	"delivery.pinion.gg"
	"direct.pinion.gg"
	"docs.pinion.gg"
	"immuniser.pinion.gg"
	"kermit.pinion.gg"
	"legacy.pinion.gg"
	"log.pinion.gg"
	"mail.pinion.gg"
	"mailer.pinion.gg"
	"motd.pinion.gg"
	"ns1.pinion.gg"
	"ns2.pinion.gg"
	"ns3.pinion.gg"
	"ns4.pinion.gg"
	"ns5.pinion.gg"
	"ns6.pinion.gg"
	"office.pinion.gg"
	"oscar.pinion.gg"
	"pinion-log.pinion.gg"
	"pinion.gg"
	"pog.pinion.gg"
	"quartermaster.pinion.gg"
	"seen.pinion.gg"
	"stage.pinion.gg"
	"templ4d2.pinion.gg"
	"tix.pinion.gg"
	"transcoded.pinion.gg"
	"video.pinion.gg"
	"voip.pinion.gg"
	"wiki.pinion.gg"
	"www.pinion.gg"
)

# Messages:
actionMsg() {
	echo -e "\e[1;33m + \e[1;32m$1 \e[0m"
}
actionMsg2() {
	echo -e "\e[1;35m + \e[1;34m$1 \e[0m"
}
infoMsg() {
	echo -e "   - $1"
}

# Process begins:
BLOCKLIST=""
actionMsg "Configuration:"
infoMsg "Hosts location: $DST_HOSTS"
infoMsg "Destination IP: $DST_IP"

# Sources list parsing
actionMsg "Downloading sources lists..."
for URL in "${SOURCES[@]}"; do
	infoMsg "$URL"
	CONTENT=$(wget -T 10 -qO- "$URL")
	BLOCKLIST=$(echo -e "$BLOCKLIST\n$CONTENT")
done

# Parse any hosts files which contain comments/other non-domain entries
actionMsg2 "Parsing sources lists..."
infoMsg "Change EOL to Unix format"
BLOCKLIST=$(echo "$BLOCKLIST" | sed 's/\r//g')
infoMsg "Select only hosts lines"
BLOCKLIST=$(echo "$BLOCKLIST" | grep -Eo '^([0-9]{1,3}\.){3}[0-9]{1,3}[[:space:]]+[^#[:space:]]+$')
infoMsg "Remove old destination"
BLOCKLIST=$(echo "$BLOCKLIST" | sed -r 's/^([0-9]{1,3}\.){3}[0-9]{1,3}[[:space:]]+//g')

# Now that parsing is done, any files containing ONLY domain names can also be parsed
actionMsg "Downloading domain lists..."
for URL in "${JUSTDOMAIN_SOURCES[@]}"; do
	infoMsg "$URL"
	CONTENT=$(wget -T 10 -qO- "$URL")
	BLOCKLIST=$(echo -e "$BLOCKLIST\n$CONTENT")
done

# Change the EOL again just incase
actionMsg2 "Parsing domain lists..."
infoMsg "Change EOL to Unix format"
BLOCKLIST=$(echo "$BLOCKLIST" | sed 's/\r//g')

# Now work on all of the BLOCKLIST
actionMsg "Parsing full blocklist..."
infoMsg "Remove local entries"
BLOCKLIST=$(echo "$BLOCKLIST" | grep -Ev '^(localhost|localhost.localdomain|local|broadcasthost)$')
infoMsg "Apply whitelist"
for DOMAIN in "${WHITELIST[@]}"; do
	BLOCKLIST=$(echo "$BLOCKLIST" | grep -Fxv "$DOMAIN")
done
infoMsg "Apply blacklist"
for DOMAIN in "${BLACKLIST[@]}"; do
	BLOCKLIST=$(echo -e "$BLOCKLIST\n$DOMAIN")
done
infoMsg "Remove duplicate entries"
BLOCKLIST=$(echo "$BLOCKLIST" | awk '!a[$0]++')
infoMsg "Sort entries"
BLOCKLIST=$(echo "$BLOCKLIST" | sort -n)
infoMsg "Add new destination"
BLOCKLIST=$(echo "$BLOCKLIST" | sed "s/^/$DST_IP /g")

actionMsg "Generating hosts file..."
HEADER=$(echo -e "# <header>$HEADER# </header>")
HEADER=$(echo -e "# $(date --rfc-2822)\n$HEADER")
HOSTS=$(echo -e "$HEADER\n# <blocklist>\n$BLOCKLIST\n# </blocklist>")

# Write to disk:
if [ $EUID -ne 0 ]; then
	echo "$HOSTS" | sudo tee $DST_HOSTS > /dev/null
else
	echo "$HOSTS" | tee $DST_HOSTS > /dev/null
fi

actionMsg "$(echo "$BLOCKLIST" | wc -l) hosts added!"
